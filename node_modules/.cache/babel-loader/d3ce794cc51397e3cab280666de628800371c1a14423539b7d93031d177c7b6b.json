{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"TaskList\",\n  data() {\n    return {\n      tasks: [],\n      newTask: {\n        todo: \"Nueva tarea\",\n        completed: false\n      }\n    };\n  },\n  methods: {\n    async fetchTasks() {\n      try {\n        const response = await fetch(\"https://dummyjson.com/todos\");\n        const data = await response.json();\n        this.tasks = data.todos;\n      } catch (error) {\n        console.error(\"Error al cargar las tareas:\", error);\n      }\n    },\n    async addTask() {\n      try {\n        const response = await fetch(\"https://dummyjson.com/todos/add\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(this.newTask)\n        });\n        const data = await response.json();\n        this.tasks.push(data);\n      } catch (error) {\n        console.error(\"Error al añadir la tarea:\", error);\n      }\n    },\n    async toggleTaskCompletion(task) {\n      try {\n        const response = await fetch(`https://dummyjson.com/todos/${task.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            completed: !task.completed\n          })\n        });\n        const data = await response.json();\n        task.completed = data.completed;\n      } catch (error) {\n        console.error(\"Error al actualizar la tarea:\", error);\n      }\n    },\n    async deleteTask(task) {\n      try {\n        await fetch(`https://dummyjson.com/todos/${task.id}`, {\n          method: \"DELETE\"\n        });\n        this.tasks = this.tasks.filter(t => t.id !== task.id);\n      } catch (error) {\n        console.error(\"Error al eliminar la tarea:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","tasks","newTask","todo","completed","methods","fetchTasks","response","fetch","json","todos","error","console","addTask","method","headers","body","JSON","stringify","push","toggleTaskCompletion","task","id","deleteTask","filter","t"],"sources":["src/views/TaskList.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <h1>Lista de Tareas</h1>\r\n        <button class=\"load-btn\" @click=\"fetchTasks\">Cargar Tareas</button>\r\n        <div v-if=\"tasks.length > 0\" class=\"task-list\">\r\n            <div v-for=\"task in tasks\" :key=\"task.id\" class=\"task-item\">\r\n                <div class=\"task-info\">\r\n                    <h3 :class=\"{ completed: task.completed }\">{{ task.todo }}</h3>\r\n                    <span class=\"task-status\" :class=\"{ 'pending': !task.completed, 'completed': task.completed }\">\r\n                        {{ task.completed ? 'Completada' : 'Pendiente' }}\r\n                    </span>\r\n                </div>\r\n                <div class=\"task-actions\">\r\n                    <button class=\"complete-btn\" @click=\"toggleTaskCompletion(task)\">\r\n                        {{ task.completed ? 'Desmarcar' : 'Completar' }}\r\n                    </button>\r\n                    <button class=\"delete-btn\" @click=\"deleteTask(task)\">Eliminar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"TaskList\",\r\n    data() {\r\n        return {\r\n            tasks: [],\r\n            newTask: { todo: \"Nueva tarea\", completed: false },\r\n        };\r\n    },\r\n    methods: {\r\n        async fetchTasks() {\r\n            try {\r\n                const response = await fetch(\"https://dummyjson.com/todos\");\r\n                const data = await response.json();\r\n                this.tasks = data.todos;\r\n            } catch (error) {\r\n                console.error(\"Error al cargar las tareas:\", error);\r\n            }\r\n        },\r\n        async addTask() {\r\n            try {\r\n                const response = await fetch(\"https://dummyjson.com/todos/add\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(this.newTask),\r\n                });\r\n                const data = await response.json();\r\n                this.tasks.push(data);\r\n            } catch (error) {\r\n                console.error(\"Error al añadir la tarea:\", error);\r\n            }\r\n        },\r\n        async toggleTaskCompletion(task) {\r\n            try {\r\n                const response = await fetch(`https://dummyjson.com/todos/${task.id}`, {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ completed: !task.completed }),\r\n                });\r\n                const data = await response.json();\r\n                task.completed = data.completed;\r\n            } catch (error) {\r\n                console.error(\"Error al actualizar la tarea:\", error);\r\n            }\r\n        },\r\n        async deleteTask(task) {\r\n            try {\r\n                await fetch(`https://dummyjson.com/todos/${task.id}`, {\r\n                    method: \"DELETE\",\r\n                });\r\n                this.tasks = this.tasks.filter((t) => t.id !== task.id);\r\n            } catch (error) {\r\n                console.error(\"Error al eliminar la tarea:\", error);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n}\r\n\r\nh1 {\r\n    font-size: 3em;\r\n    color: rgb(0, 0, 0);\r\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\nbutton {\r\n    padding: 10px 20px;\r\n    margin: 5px;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 1em;\r\n}\r\n\r\n.load-btn {\r\n    background-color: #a24fe6;\r\n    color: rgb(0, 0, 0);\r\n}\r\n\r\n.task-list {\r\n    margin-top: 20px;\r\n}\r\n\r\n.task-item {\r\n    background-color: #f9f9f9;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.task-info {\r\n    flex-grow: 1;\r\n}\r\n\r\n.task-actions {\r\n    display: flex;\r\n    gap: 10px;\r\n}\r\n\r\nh3 {\r\n    color: #333; /* Color neutro para el texto de la tarea */\r\n}\r\n\r\nh3.completed {\r\n    text-decoration: line-through; /* Línea de tachado negra */\r\n}\r\n\r\n.task-status {\r\n    display: inline-block;\r\n    padding: 5px 10px;\r\n    border-radius: 5px;\r\n    font-weight: bold;\r\n    margin-left: 10px;\r\n}\r\n\r\n.pending {\r\n    background-color: orange; /* Color naranja para 'Pendiente' */\r\n    color: white;\r\n}\r\n\r\n.completed {\r\n    background-color: springgreen; /* Color springgreen para 'Completada' */\r\n    color: white;\r\n}\r\n\r\n.complete-btn {\r\n    background-color: #28a745; /* Verde */\r\n    color: white;\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.complete-btn:hover {\r\n    background-color: #218838; /* Verde más oscuro al pasar el ratón */\r\n}\r\n\r\n.delete-btn {\r\n    background-color: #dc3545; /* Rojo */\r\n    color: white;\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.delete-btn:hover {\r\n    background-color: #c82333; /* Rojo más oscuro al pasar el ratón */\r\n}\r\n</style>"],"mappings":";AAwBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;QAAAC,IAAA;QAAAC,SAAA;MAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA;QACA,MAAAR,IAAA,SAAAO,QAAA,CAAAE,IAAA;QACA,KAAAR,KAAA,GAAAD,IAAA,CAAAU,KAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;MACA;IACA;IACA,MAAAE,QAAA;MACA;QACA,MAAAN,QAAA,SAAAC,KAAA;UACAM,MAAA;UACAC,OAAA;YAAA;UAAA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,MAAAhB,OAAA;QACA;QACA,MAAAF,IAAA,SAAAO,QAAA,CAAAE,IAAA;QACA,KAAAR,KAAA,CAAAkB,IAAA,CAAAnB,IAAA;MACA,SAAAW,KAAA;QACAC,OAAA,CAAAD,KAAA,8BAAAA,KAAA;MACA;IACA;IACA,MAAAS,qBAAAC,IAAA;MACA;QACA,MAAAd,QAAA,SAAAC,KAAA,gCAAAa,IAAA,CAAAC,EAAA;UACAR,MAAA;UACAC,OAAA;YAAA;UAAA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;YAAAd,SAAA,GAAAiB,IAAA,CAAAjB;UAAA;QACA;QACA,MAAAJ,IAAA,SAAAO,QAAA,CAAAE,IAAA;QACAY,IAAA,CAAAjB,SAAA,GAAAJ,IAAA,CAAAI,SAAA;MACA,SAAAO,KAAA;QACAC,OAAA,CAAAD,KAAA,kCAAAA,KAAA;MACA;IACA;IACA,MAAAY,WAAAF,IAAA;MACA;QACA,MAAAb,KAAA,gCAAAa,IAAA,CAAAC,EAAA;UACAR,MAAA;QACA;QACA,KAAAb,KAAA,QAAAA,KAAA,CAAAuB,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAH,EAAA,KAAAD,IAAA,CAAAC,EAAA;MACA,SAAAX,KAAA;QACAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}